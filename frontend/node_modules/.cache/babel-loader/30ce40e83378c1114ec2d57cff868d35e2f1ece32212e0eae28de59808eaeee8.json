{"ast":null,"code":"var _jsxFileName = \"/home/test/B21-July11/insta_frontend/src/components/pages/Signin.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { UserContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signin = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  //create a state using hook for email and password \n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //create a function to handle submit data using axios\n  const PostData = () => {\n    //add validation check for name,email and password \n    if (!email || !password) {\n      toast.error(\"Please fill in all fields..\");\n      return;\n    }\n\n    //regex validation using toast\n    // Email validation regex\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/;\n\n    // Password validation regex: Minimum 8 characters, at least one uppercase letter, one lowercase letter, one number, and one special character\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,}$/;\n\n    //validate email format using regex \n    if (!email.match(emailRegex)) {\n      //add error with toast\n      toast.error(\"Invalid Email format\", {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      return;\n    }\n    if (!password.match(passwordRegex)) {\n      toast.error(\"Invalid password Format\", {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      return;\n    }\n\n    // let user = localStorage.getItem('jwt');\n    // const token = user;\n    // console.log(token);\n    //use axios to make a post request->/signin\n    axios.post(\"http://localhost:5000/signin\", {\n      email,\n      password\n    }, {\n      headers: {\n        \"Content-type\": \"Application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`\n      }\n    }).then(response => {\n      const data = response.data;\n      console.log(data);\n      //storing jwt token and use data in local storage upon sucessful login\n      localStorage.setItem(\"jwt\", data.token);\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\n      //dispatch({type:\"USER\",payload:data.user});\n      alert(data.msg);\n      navigate(\"/\"); //navigate to home page\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card input-field logindiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn waves-effect waves-light #448aff blue accent-2\",\n        type: \"submit\",\n        name: \"action\",\n        onClick: () => PostData(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Signin, \"S8PRb0P2G1kMO60cCv2iz9kbmNE=\", false, function () {\n  return [useNavigate];\n});\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useContext","useState","axios","Link","useNavigate","ToastContainer","toast","UserContext","jsxDEV","_jsxDEV","Signin","_s","state","dispatch","navigate","email","setEmail","password","setPassword","PostData","error","emailRegex","passwordRegex","match","position","POSITION","TOP_RIGHT","post","headers","localStorage","getItem","then","response","data","console","log","setItem","token","JSON","stringify","user","alert","msg","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","name","onClick","to","_c","$RefreshReg$"],"sources":["/home/test/B21-July11/insta_frontend/src/components/pages/Signin.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { UserContext } from '../../App';\nconst Signin=()=>{\n  const {state,dispatch}=useContext(UserContext);\n  //create a state using hook for email and password \n  const navigate=useNavigate();\n  const[email,setEmail]=useState(\"\");\n  const[password,setPassword]=useState(\"\");\n\n  //create a function to handle submit data using axios\n  const PostData=()=>{\n\n            //add validation check for name,email and password \n            if(!email||!password){\n              toast.error(\"Please fill in all fields..\");\n              return;\n          }\n  \n    //regex validation using toast\n       // Email validation regex\n  const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/;\n\n    \n  // Password validation regex: Minimum 8 characters, at least one uppercase letter, one lowercase letter, one number, and one special character\n  const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,}$/;\n\n\n  //validate email format using regex \n  if(!email.match(emailRegex)){\n    //add error with toast\n    toast.error(\"Invalid Email format\",{\n      position:toast.POSITION.TOP_RIGHT,\n    });\n    return;\n  }\n\n  if(!password.match(passwordRegex)){\n    toast.error(\"Invalid password Format\",{\n      position:toast.POSITION.TOP_RIGHT,\n    });\n    return;\n  }\n\n    // let user = localStorage.getItem('jwt');\n    // const token = user;\n    // console.log(token);\n    //use axios to make a post request->/signin\n      axios.post(\"http://localhost:5000/signin\",\n      {\n        email,\n        password\n      },\n      {\n        headers: {\n          \"Content-type\":\"Application/json\",\n          \"Authorization\":`Bearer ${localStorage.getItem('jwt')}`}\n      },\n     )\n    .then(response=>{\n      const data=response.data;\n      console.log(data);\n        //storing jwt token and use data in local storage upon sucessful login\n        localStorage.setItem(\"jwt\",data.token);\n        localStorage.setItem(\"user\",JSON.stringify(data.user));\n        //dispatch({type:\"USER\",payload:data.user});\n        alert(data.msg);\n        navigate(\"/\");//navigate to home page\n    }).catch(error=>{\n      console.log(error);\n    })\n\n  }\n    return(\n    <div className='mycard'>\n      <div className='card input-field logindiv'>\n        <h2>Instagram</h2>\n        <input \n        type=\"email\"\n        placeholder=\"Enter your Email\"\n        value={email}\n        onChange={(e)=>setEmail(e.target.value)}\n        />\n        <input\n        type='password'\n        placeholder='Enter your password'\n        value={password}\n        onChange={(e)=>setPassword(e.target.value)}\n        />\n      <button className=\"btn waves-effect waves-light #448aff blue accent-2\" \n      type=\"submit\"\n       name=\"action\"\n       onClick={()=>PostData()}\n       >Login\n      </button>\n      <h6>\n        <Link to=\"/signup\">Don't have an account?</Link>\n      </h6>\n      </div>\n      <ToastContainer/>\n    </div>\n    )\n}\n\nexport default Signin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}